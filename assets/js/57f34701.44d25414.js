"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[875],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,y=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return a?n.createElement(y,l(l({ref:t},u),{},{components:a})):n.createElement(y,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},932:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),l=["components"],i={},p="How to query a database",s={unversionedId:"database/query-db",id:"database/query-db",title:"How to query a database",description:"The Notion.queryDatabase function retrieve the metadata of a Notion database.",source:"@site/../docs/database/query-db.md",sourceDirName:"database",slug:"/database/query-db",permalink:"/zio-notion/database/query-db",draft:!1,editUrl:"https://github.com/univalence/zio-notion/edit/master/docs/../docs/database/query-db.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Update a page",permalink:"/zio-notion/page/update-page"},next:{title:"Retrieve a database",permalink:"/zio-notion/database/retrieve-db"}},u={},c=[{value:"Filter &amp; Sorts",id:"filter--sorts",level:2},{value:"Column",id:"column",level:3},{value:"Sorts",id:"sorts",level:3},{value:"Filters",id:"filters",level:3}],d={toc:c};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-query-a-database"},"How to query a database"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Notion.queryDatabase")," function retrieve the metadata of a Notion database."),(0,o.kt)("h2",{id:"filter--sorts"},"Filter & Sorts"),(0,o.kt)("p",null,"You can query the whole database, but you generally want to retrieve a subset of the database."),(0,o.kt)("p",null,"You can select what kind of information you want specifying a Query object containing information about how you want\nto sort the result (based on certain columns) or what do you want to retrieve (based on certain columns)."),(0,o.kt)("p",null,"It can be a bit cumbersome to write the object by hand, we advise you to use the DSL to create our own filters and sorts."),(0,o.kt)("p",null,"To start using the DSL you need the following import:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"import zio.notion.dsl._\n")),(0,o.kt)("h3",{id:"column"},"Column"),(0,o.kt)("p",null,"Both filter and sorts can be applied to databases columns (ie: what's underneath a database property)."),(0,o.kt)("p",null,"You can declare a column using ",(0,o.kt)("inlineCode",{parentName:"p"},"$")," as such:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val col: Column = $"My property"\n')),(0,o.kt)("h3",{id:"sorts"},"Sorts"),(0,o.kt)("p",null,"Sorts can be defined using a column:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val sorts = $"Col1"\n')),(0,o.kt)("p",null,"It  means that we want the pages sorted using the ",(0,o.kt)("strong",{parentName:"p"},"Col1")," property in ascending order."),(0,o.kt)("p",null,"You can also use ",(0,o.kt)("inlineCode",{parentName:"p"},"col.descending")," to sort them in descending order:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val sorts = $"Col1".descending\n')),(0,o.kt)("p",null,"Sorts can be chained using the ",(0,o.kt)("inlineCode",{parentName:"p"},"andThen")," keyword:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val sorts = $"Col1" andThen byCreatedTime.descending\n')),(0,o.kt)("h3",{id:"filters"},"Filters"),(0,o.kt)("p",null,"Filters can also be defined from a column."),(0,o.kt)("p",null,"Filters are chained using the ",(0,o.kt)("inlineCode",{parentName:"p"},"or")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"and")," keywords:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'val filter = $"Col1".asNumber >= 10 and $"Col2".asDate <= LocalDate.of(2022, 2, 2)\n')),(0,o.kt)("p",null,"In order to apply a filter to a column you must first specify its property type as such:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"my prop".asNumber')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asTitle')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asRichText')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asCheckbox')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asSelect')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asMultiSelect')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asDate')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asPeople')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asFiles')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asUrl')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asEmail')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asPhoneNumber')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asRelation')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asCreatedBy')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asLastEditedBy')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asCreatedTime')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'$"myprop".asLastEditedTime'))),(0,o.kt)("p",null,"All filter conditions can be found ",(0,o.kt)("a",{parentName:"p",href:"https://developers.notion.com/reference/post-database-query-filter"},"here")," or using\nautocompletion tools."))}m.isMDXComponent=!0}}]);